{
    # Initialization properties
    "first_run": true,
    "date": "today",
    "time": "now",
    "user": "autogenerate",
    "MultiMoon commit hash": "autogenerate",
    "mm_initguess_which" : "get_init_guess_from_dist",
    "RunGoal" : "Fit Eris",
    "lockspinanglesflag": false,
    "transform": true,
    "com_offset": true,
    "min_periapse": 8000,
    "op_mode" : false,
    "obs_df" : "Eris_obs_df.csv",
    "c_axis": 1163,

    # Run properties/parameters
    "objectname" : "Eris",
    "run_file": "22_offset",
    "numobjects" : 2,
    "dynamicstoincludeflags" : "22",	# Length must = numobjects. 0 = point mass. 1 = J2. 2 = full spins
    "includesun" : 0,			# 0 = no sun. 1 = sun.
    "nwalkers" : 100,			# number of walkers in emcee ensemble
    "nburnin" : 100,			# length of burn in
    "nsteps" : 200,			# number of initial steps for sampling
    "essgoal" : 10,			# effective sample size desired
    "maxiter" : 1,			# maximum number of steps to take within the final sampling
    "nthinning" : 100,			# How many steps overall to thin the data down to, should be a multiplier of nburnin, nsteps, and cluster_burnin
    "thin_run" : false,
    "thin_plots": 100,
    "maxreset" : 10000,			# maximum number of resets when checking parameters set
    "spinny_tolerance": 1e-10,		# tolerance of spinny
    "numprocesses": 30,			# number of cores to use
    "epoch_SJD":  2453979.0,		# epoch to fit to

    # Additional options
    "verbose" : false,			# Enables print statements within the code
    "updatebestfitfile" : true,		# Writes to a file when new best fit is found
    "use_clustering" : true,		# Implements a clustering/pruning algorithm after (first) burnin
    "clustering_burnin" : 100,	# Number of steps to burn in after clustering
    "clustering_maxfrac" : 0.8,    

    #These values are sed by the code to run and should not be changed.
    "is_mcmc":false,			# ??
    "get_resid":false,			# ??
    "startfromfile" : false,		# ??

    # Object names
    "names_dict" :
    {
        "name_1": "Eris",
        "name_2": "Dysnomia"
    },

    # Which parameters to have floating
    "float_dict" : 
    { 
        "mass_1": 1,
        "mass_2": 1,
        "sma_2": 1,
        "ecc_2": 1,
        "aop_2": 1,
        "inc_2": 1,
        "lan_2": 1,
        "mea_2": 1,
        "mea_2": 1,
        "j2r2_1": 1,
        "spinc_1": 1,
        "sprate_1": 0,
        "spaop_1": 1,
        "splan_1": 1,
        "c22r2_1": 1,
        "j2r2_2": 1,
        "spinc_2": 1,
        "sprate_2": 0,
        "spaop_2": 1,
        "splan_2": 1,
        "c22r2_2": 1,
        "lat_offset" : 1,
        "long_offset" : 1
    }
}

